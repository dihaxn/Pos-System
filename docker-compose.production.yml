version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: lloms-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: lloms_prod_password_2024
      MYSQL_DATABASE: lloms_production
      MYSQL_USER: lloms_user
      MYSQL_PASSWORD: lloms_user_password_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - lloms-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      timeout: 20s
      retries: 10
      interval: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lloms-redis-prod
    command: redis-server --requirepass lloms_redis_password_2024
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - lloms-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 20s
      retries: 10

  # Discovery Service
  discovery-service:
    build:
      context: ./services/discovery-service
      dockerfile: Dockerfile
    container_name: lloms-discovery-prod
    ports:
      - "8761:8761"
    networks:
      - lloms-prod-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: lloms-user-prod
    ports:
      - "8088:8088"
    networks:
      - lloms-prod-network
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_started
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/userDb?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=lloms_prod_password_2024
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: lloms-product-prod
    ports:
      - "8087:8087"
    networks:
      - lloms-prod-network
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_started
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/productDb?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=lloms_prod_password_2024
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/

  # Outlet Service
  outlet-service:
    build:
      context: ./services/outlet-service
      dockerfile: Dockerfile
    container_name: lloms-outlet-prod
    ports:
      - "8089:8089"
    networks:
      - lloms-prod-network
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_started
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/outletDb?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=lloms_prod_password_2024
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/

  # Reporting Service
  reporting-service:
    build:
      context: ./services/reporting-service
      dockerfile: Dockerfile
    container_name: lloms-reporting-prod
    ports:
      - "8090:8090"
    networks:
      - lloms-prod-network
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_started
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/reportingDb?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=lloms_prod_password_2024
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: lloms-gateway-prod
    ports:
      - "8080:8080"
    networks:
      - lloms-prod-network
    depends_on:
      discovery-service:
        condition: service_started
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-service:8761/eureka/

  # BFF Service
  bff:
    build:
      context: ./bff
      dockerfile: Dockerfile
    container_name: lloms-bff-prod
    ports:
      - "3000:3000"
    networks:
      - lloms-prod-network
    depends_on:
      - api-gateway
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - JWT_SECRET=lloms_jwt_secret_key_2024_production_secure
      - PRODUCT_SERVICE_BASE_URL=http://product-service:8087
      - USER_SERVICE_BASE_URL=http://user-service:8088
      - OUTLET_SERVICE_BASE_URL=http://outlet-service:8089
      - REPORTING_SERVICE_BASE_URL=http://reporting-service:8090

  # POS Frontend
  frontend-pos:
    build:
      context: ./frontend/pos-system
      dockerfile: Dockerfile
    container_name: lloms-pos-prod
    ports:
      - "5174:80"
    networks:
      - lloms-prod-network
    depends_on:
      - bff
    restart: unless-stopped
    environment:
      - NODE_ENV=production

  # User Website
  frontend-website:
    build:
      context: ./frontend/user-website
      dockerfile: Dockerfile
    container_name: lloms-website-prod
    ports:
      - "5173:80"
    networks:
      - lloms-prod-network
    depends_on:
      - bff
    restart: unless-stopped
    environment:
      - NODE_ENV=production

volumes:
  mysql_prod_data:
  redis_prod_data:

networks:
  lloms-prod-network:
    driver: bridge
